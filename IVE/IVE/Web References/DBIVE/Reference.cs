//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace IVE.DBIVE {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BDIVESoap", Namespace="http://tempuri.org/")]
    public partial class BDIVE : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback InsertarRemesaOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public BDIVE() {
            this.Url = global::IVE.Properties.Settings.Default.IVE_DBIVE_BDIVE;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event InsertarRemesaCompletedEventHandler InsertarRemesaCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertarRemesa", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertarRemesa(string Usuario, string Password, int Id_Remesa, decimal Monto, string Nombre_Emisor, string Correo_Emisor, string Doc_Identificacion_Emisor, string Direccion_Emisor, int No_Telefono_Emisor, string Nombre_Receptor, string Correo_Receptor, string Doc_Identificacion_Receptor, string Direccion_Receptor, int No_Telefono_Receptor, System.DateTime Fecha_Recepcion_Remesa) {
            object[] results = this.Invoke("InsertarRemesa", new object[] {
                        Usuario,
                        Password,
                        Id_Remesa,
                        Monto,
                        Nombre_Emisor,
                        Correo_Emisor,
                        Doc_Identificacion_Emisor,
                        Direccion_Emisor,
                        No_Telefono_Emisor,
                        Nombre_Receptor,
                        Correo_Receptor,
                        Doc_Identificacion_Receptor,
                        Direccion_Receptor,
                        No_Telefono_Receptor,
                        Fecha_Recepcion_Remesa});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertarRemesaAsync(string Usuario, string Password, int Id_Remesa, decimal Monto, string Nombre_Emisor, string Correo_Emisor, string Doc_Identificacion_Emisor, string Direccion_Emisor, int No_Telefono_Emisor, string Nombre_Receptor, string Correo_Receptor, string Doc_Identificacion_Receptor, string Direccion_Receptor, int No_Telefono_Receptor, System.DateTime Fecha_Recepcion_Remesa) {
            this.InsertarRemesaAsync(Usuario, Password, Id_Remesa, Monto, Nombre_Emisor, Correo_Emisor, Doc_Identificacion_Emisor, Direccion_Emisor, No_Telefono_Emisor, Nombre_Receptor, Correo_Receptor, Doc_Identificacion_Receptor, Direccion_Receptor, No_Telefono_Receptor, Fecha_Recepcion_Remesa, null);
        }
        
        /// <remarks/>
        public void InsertarRemesaAsync(
                    string Usuario, 
                    string Password, 
                    int Id_Remesa, 
                    decimal Monto, 
                    string Nombre_Emisor, 
                    string Correo_Emisor, 
                    string Doc_Identificacion_Emisor, 
                    string Direccion_Emisor, 
                    int No_Telefono_Emisor, 
                    string Nombre_Receptor, 
                    string Correo_Receptor, 
                    string Doc_Identificacion_Receptor, 
                    string Direccion_Receptor, 
                    int No_Telefono_Receptor, 
                    System.DateTime Fecha_Recepcion_Remesa, 
                    object userState) {
            if ((this.InsertarRemesaOperationCompleted == null)) {
                this.InsertarRemesaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertarRemesaOperationCompleted);
            }
            this.InvokeAsync("InsertarRemesa", new object[] {
                        Usuario,
                        Password,
                        Id_Remesa,
                        Monto,
                        Nombre_Emisor,
                        Correo_Emisor,
                        Doc_Identificacion_Emisor,
                        Direccion_Emisor,
                        No_Telefono_Emisor,
                        Nombre_Receptor,
                        Correo_Receptor,
                        Doc_Identificacion_Receptor,
                        Direccion_Receptor,
                        No_Telefono_Receptor,
                        Fecha_Recepcion_Remesa}, this.InsertarRemesaOperationCompleted, userState);
        }
        
        private void OnInsertarRemesaOperationCompleted(object arg) {
            if ((this.InsertarRemesaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertarRemesaCompleted(this, new InsertarRemesaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void InsertarRemesaCompletedEventHandler(object sender, InsertarRemesaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertarRemesaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertarRemesaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591